deployments:
  mytodoapp:
    name: "mytodoapp"
    image: "thsre/mytodoapp"
    replicas: "2"
    labels:
      app: "mytodoapp"
      env: "labs"
      dev: "true"
    resources:
      requests:
        memory: "128Mi"
        cpu: "250m"
      limits:
        memory: "256Mi"
        cpu: "500m"
  redis:
    image: "redis"
    replicas: 1
    port: 6379
    labels:
      app: "redis"
      env: "labs"
      dev: "true"
    service:
      type: "ClusterIP"
      port: 6379
      targetPort: 6379
      name: "redis-port"
    resources:
      requests:
        memory: "128Mi"
        cpu: "250m"
      limits:
        memory: "256Mi"
        cpu: "500m"
services:
  mytodoapp:
    ports:
      - port: 3000
        targetPort: 3000
        name: "mytodoapp-app"
        serviceType: LoadBalancer
        NodePort: 32500
      - port: 8088
        targetPort: 8088
        name: "mytodoapp-metrics"
        serviceType: ClusterIP
    labels:
      app: "mytodoapp"
      env: "labs"
      dev: "true"
  redis:
    ports:
      - port: 6379
        targetPort: 6378
        name: "redis-port"
        serviceType: ClusterIP
    labels:
      app: "redis"
      env: "labs"
      dev: "true"

ingress:
  ingressClassName: "" 
  enabled: false
  name: mytodoapp
  annotations:
    nginx.ingress.kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt"
  tls:
    - hosts:
        - mytodopapp.devopsmt.com.br
      secretName: mytodoapp-tls
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: mytodoapp
                port:
                  number: 80